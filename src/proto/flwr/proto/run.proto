// Copyright 2024 Flower Labs GmbH. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ==============================================================================

syntax = "proto3";

package flwr.proto;

import "flwr/proto/fab.proto";
import "flwr/proto/transport.proto";

message Run {
  sint64 run_id = 1;
  string fab_id = 2;
  string fab_version = 3;
  map<string, Scalar> override_config = 4;
  string fab_hash = 5;
}

message RunStatus {
  string phase = 1;  // "starting", "running", "finished"
  string result = 2; // "completed", "failed", "stopped" or ""
  string detail = 3; // failure details
}

// CreateRun
message CreateRunRequest {
  string fab_id = 1;
  string fab_version = 2;
  map<string, Scalar> override_config = 3;
  Fab fab = 4;
  double ttl = 5;
}
message CreateRunResponse {
  bool success = 1;
  sint64 run_id = 2;
}

// GetRun
message GetRunRequest { sint64 run_id = 1; }
message GetRunResponse { Run run = 1; }

// UpdateRunStatus
message UpdateRunStatusRequest {
  uint64 run_id = 1;
  RunStatus status = 2;
}
message UpdateRunStatusResponse {}

// GetRunStatus
message GetRunStatusRequest { repeated uint64 run_ids = 1; }
message GetRunStatusResponse { map<uint64, RunStatus> run_status_dict = 1; }
